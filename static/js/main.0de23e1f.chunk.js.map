{"version":3,"sources":["home/section/validate.js","home/section/renderField.js","home/section/WizardFormFirstPage.js","home/section/WizardFormThirdPage.js","home/wizard.js","home/home.js","App.js","reportWebVitals.js","index.js"],"names":["validate","values","errors","firstName","lastName","email","test","sex","favoriteColor","renderField","input","label","type","meta","touched","error","placeholder","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","props","handleSubmit","onSubmit","Field","name","component","className","colors","renderColorSelector","value","map","val","pristine","previousPage","submitting","htmlFor","id","onClick","disabled","WizardForm","nextPage","bind","state","page","this","setState","Component","Home","App","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0de23e1f.chunk.js","sourcesContent":["const validate = values => {\r\n    const errors = {}\r\n    if (!values.firstName) {\r\n      errors.firstName = 'Required'\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = 'Required'\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address'\r\n    }\r\n    if (!values.sex) {\r\n      errors.sex = 'Required'\r\n    }\r\n    if (!values.favoriteColor) {\r\n      errors.favoriteColor = 'Required'\r\n    }\r\n    return errors\r\n  }\r\n  \r\n  export default validate","import React from 'react'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} placeholder={label} type={type}/>\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default renderField","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from './validate'\r\nimport renderField from './renderField'\r\n\r\nconst WizardFormFirstPage = (props) => {\r\n  const { handleSubmit } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field name=\"firstName\" type=\"text\" component={renderField} label=\"First Name\"/>\r\n      <Field name=\"lastName\" type=\"text\" component={renderField} label=\"Last Name\"/>\r\n      <div>\r\n        <button type=\"submit\" className=\"next\">Next</button>\r\n      </div>\r\n    </form>\r\n  ) \r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'wizard',                 // <------ same form name\r\n  destroyOnUnmount: false,        // <------ preserve form data\r\n  forceUnregisterOnUnmount: true,  // <------ unregister fields on unmount\r\n  validate\r\n})(WizardFormFirstPage)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from './validate'\r\nconst colors = [ 'Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Indigo', 'Violet' ]\r\n\r\nconst renderColorSelector = ({ input, meta: { touched, error } }) => (\r\n  <div>\r\n    <select {...input}>\r\n      <option value=\"\">Select a color...</option>\r\n      {colors.map(val => <option value={val} key={val}>{val}</option>)}\r\n    </select>\r\n    {touched && error && <span>{error}</span>}\r\n  </div>\r\n)\r\n\r\nconst WizardFormThirdPage = (props) => {\r\n  const { handleSubmit, pristine, previousPage, submitting } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Favorite Color</label>\r\n        <Field name=\"favoriteColor\" component={renderColorSelector}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"employed\">Employed</label>\r\n        <div>\r\n          <Field name=\"employed\" id=\"employed\" component=\"input\" type=\"checkbox\"/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label>Notes</label>\r\n        <div>\r\n          <Field name=\"notes\" component=\"textarea\" placeholder=\"Notes\"/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" className=\"previous\" onClick={previousPage}>Previous</button>\r\n        <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport default reduxForm({\r\n  form: 'wizard', //Form name is same\r\n  destroyOnUnmount: false,\r\n  forceUnregisterOnUnmount: true,  // <------ unregister fields on unmount\r\n  validate\r\n})(WizardFormThirdPage)","import React, { Component, PropTypes } from 'react'\r\nimport WizardFormFirstPage from '../home/section/WizardFormFirstPage'\r\nimport WizardFormSecondPage from '../home/section/WizardFormSecondPage'\r\nimport WizardFormThirdPage from '../home/section/WizardFormThirdPage'\r\n\r\nclass WizardForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.nextPage = this.nextPage.bind(this)\r\n    this.previousPage = this.previousPage.bind(this)\r\n    this.state = {\r\n      page: 1\r\n    }\r\n  }\r\n  nextPage() {\r\n    this.setState({ page: this.state.page + 1 })\r\n  }\r\n\r\n  previousPage() {\r\n    this.setState({ page: this.state.page - 1 })\r\n  }\r\n\r\n  render() {\r\n    const { onSubmit } = this.props\r\n    const { page } = this.state\r\n    return (<div>\r\n        {page === 1 && <WizardFormFirstPage onSubmit={this.nextPage}/>}\r\n        {page === 2 && <WizardFormSecondPage previousPage={this.previousPage} onSubmit={this.nextPage}/>}\r\n        {page === 3 && <WizardFormThirdPage previousPage={this.previousPage} onSubmit={onSubmit}/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nWizardForm.propTypes = {\r\n  onSubmit: PropTypes\r\n}\r\n\r\nexport default WizardForm","import React, { Component } from 'react';\r\nimport WizardForm from './wizard';\r\n\r\nclass Home extends Component {\r\n\r\n   render() {\r\n     //const { classes } = this.props;\r\n\r\n      return (\r\n\r\n        <div >\r\n            <div >\r\n            {/* <AppBar/> */}\r\n            {/* <Navigation /> */}\r\n            <main >\r\n                <div  />\r\n                <h1>{'Home'}</h1>\r\n                <WizardForm/>\r\n            </main>\r\n            </div>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n  \r\n\r\n\r\nexport default Home ;\r\n  ","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport WizardForm from './home/wizard';\nimport Home from './home/home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Home/>\n        <UncontrolledDropdown>\n        <DropdownToggle caret>\n          Dropdown\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Header</DropdownItem>\n          <DropdownItem disabled>Action</DropdownItem>\n          <DropdownItem>Another Action</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem>Another Action</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}